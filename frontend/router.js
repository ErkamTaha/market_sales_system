// router.js - Vue Router YapÄ±landÄ±rmasÄ±
const { createRouter, createWebHashHistory } = VueRouter;

// Vue SFC dosyalarÄ±nÄ± yÃ¼kleme fonksiyonu
async function loadVueComponent(url) {
    const response = await fetch(url);
    const template = await response.text();
    return Vue.defineAsyncComponent(() => {
        return Vue.compileToFunction(template);
    });
}

// Daha basit yÃ¶ntem - sadece template'i yÃ¼kle
async function loadComponent(path) {
    const response = await fetch(`components/${path}.vue`);
    const content = await response.text();
    
    // .vue dosyasÄ±nÄ± parse et
    const templateMatch = content.match(/<template>([\s\S]*?)<\/template>/);
    const scriptMatch = content.match(/<script>([\s\S]*?)<\/script>/);
    const styleMatch = content.match(/<style[^>]*>([\s\S]*?)<\/style>/);
    
    const template = templateMatch ? templateMatch[1] : '';
    const scriptContent = scriptMatch ? scriptMatch[1] : 'export default {}';
    
    // Script iÃ§eriÄŸini deÄŸerlendir
    const module = {};
    const exports = {};
    eval(scriptContent.replace('export default', 'module.exports ='));
    
    const component = module.exports || {};
    component.template = template;
    
    // Style'Ä± head'e ekle
    if (styleMatch) {
        const style = document.createElement('style');
        style.textContent = styleMatch[1];
        document.head.appendChild(style);
    }
    
    return component;
}

const routes = [
    {
        path: '/',
        name: 'home',
        component: () => loadComponent('Home'),
        meta: {
            title: 'SatÄ±ÅŸ',
            icon: 'ğŸ’°'
        }
    },
    {
        path: '/products',
        name: 'products',
        component: () => loadComponent('Products'),
        meta: {
            title: 'ÃœrÃ¼n YÃ¶netimi',
            icon: 'ğŸ“¦'
        }
    },
    {
        path: '/reports',
        name: 'reports',
        component: () => loadComponent('Reports'),
        meta: {
            title: 'Raporlar',
            icon: 'ğŸ“Š'
        }
    },
    {
        // 404 sayfasÄ± - bilinmeyen route'lar iÃ§in
        path: '/:pathMatch(.*)*',
        redirect: '/'
    }
];

const router = createRouter({
    history: createWebHashHistory(), // Hash mode (#/products gibi)
    routes
});

// Route deÄŸiÅŸtiÄŸinde sayfa baÅŸlÄ±ÄŸÄ±nÄ± gÃ¼ncelle
router.beforeEach((to, from, next) => {
    if (to.meta.title) {
        document.title = `${to.meta.title} - Market SatÄ±ÅŸ Sistemi`;
    }
    next();
});

// Route deÄŸiÅŸtiÄŸinde drawer'Ä± kapat (mobil iÃ§in)
router.afterEach(() => {
    // EÄŸer ekran kÃ¼Ã§Ã¼kse drawer'Ä± kapat
    if (window.innerWidth < 960) {
        store.commit('SET_DRAWER', false);
    }
});